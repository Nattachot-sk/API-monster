// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Player {
  id       Int    @id @default(autoincrement())
  username String @unique
  email    String @unique
  password String
  role     Role   @default(USER)
  money    Int    @default(0)

  status    Status[]
  inventory Inventory[]

  skill   Skill @relation(fields: [skillId], references: [id])
  skillId Int

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("players")
}

enum Role {
  USER
  ADMIN
}

model Status {
  id         Int    @id @default(autoincrement())
  player     Player @relation(fields: [playerId], references: [id])
  playerId   Int    
  level      Int    @default(1)
  experience Int    @default(0)
  health     Int    @default(100)
  mana       Int    @default(50)
  attack     Int    @default(3)
  armor      Int    @default(3)
  critical   Int    @default(1)
  rank       Rank   @default(E)

  @@map("statuses")
}

enum Rank {
  S
  A
  B
  C
  D
  E
}

model Skill {
  id     Int    @id @default(autoincrement())
  name   String
  damage Int    @default(10)
  mana   Int    @default(10)

  player Player[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("skills")
}

model Inventory {
  id       Int    @id @default(autoincrement())
  player   Player @relation(fields: [playerId], references: [id])
  playerId Int

  item     Item   @relation(fields: [itemId], references: [id])
  itemId   Int
  name     String
  quantity Int    @default(1)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([playerId, itemId])
  @@map("inventories")
}

model Monster {
  id         Int    @id @default(autoincrement())
  name       String
  health     Int
  attack     Int
  defense    Int
  experience Int
  rank String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("Monters")
}



model Item {
  id          Int     @id @default(autoincrement())
  name        String
  description String?
  price       Int
  dropRate    Float

  rarity   Rarity @relation(fields: [rarityId], references: [id])
  rarityId Int

  Inventory Inventory[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("Items")
}

model Rarity {
  id        Int      @id @default(autoincrement())
  name      String   @unique
  item      Item[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
